#!/bin/sh -e

# This script ensures at most one running instance for a <msgid>

umask 077
export LC_ALL=C


if [ $# -lt 2  -o  \( queue != "$1"  -a  rqueue != "$1" \) ]; then
    echo "Format: $0 queue|rqueue <msgid>[.del]"
    exit 1
fi


# Helpers
validate=${CABLE_HOME}/validate
fetch=${CABLE_HOME}/fetch
crypto=${CABLE_HOME}/crypto
comm=${CABLE_HOME}/comm

# Parameters
qtype=$1
msgid="${2%.del}"
dirid="${2}"

lockmagick="$3"
locktmout=30

# Directories
msgdir=${CABLE_QUEUES}/${qtype}/"${dirid}"


trap '[ $? = 0 ] || error failed' 0
error() {
    logger -t loop -p mail.err "$@ (${msgid})"
    trap - 0
    exit 1
}


# Sanity checks
[ ${#msgid} = 40 ] || error "bad msgid"
[ -r "${msgdir}" ] || error "cannot access"


# .del actions: blocking lock (to let the renaming action finish)
if [ "${dirid}" != "${msgid}" ]; then

    if [ ${qtype} = queue ]; then

        if [ -e "${msgdir}" ]; then
            exec flock -w ${locktmout} "${msgdir}"/ "${comm}" ack "${msgid}"
        else
            error ".del directory not found"
        fi

    else

        if [ -e "${msgdir}" ]; then
            exec flock -w ${locktmout} "${msgdir}"/ "${comm}" fin "${msgid}"
        else
            error ".del directory not found"
        fi

    fi

else

    if [ ${qtype} = queue ]; then

        # non-blocking lock of combined operations
        if [ lockmagick != "${lockmagick}" ]; then
            exec flock -n "${msgdir}"/ "$0" ${qtype} "${msgid}" lockmagick
        fi

        "${validate}" ${qtype} "${msgid}"
        set +e

        # handle ack first, to retry send if failed
        if   [ -e "${msgdir}"/ack.ok  ]; then
            "${comm}"   ack  "${msgid}"
        elif [ -e "${msgdir}"/ack.req ]; then
            "${crypto}" ack  "${msgid}" && \
            "${comm}"   ack  "${msgid}"
        fi

        # if ack succeeds, ${msgdir} is renamed
        if [ -e "${msgdir}" ]; then
            if   [ -e "${msgdir}"/send.req ]; then
                     "${fetch}"  send "${msgid}" && \
                     "${crypto}" send "${msgid}" && \
                exec "${comm}"   send "${msgid}"
            elif [ -e "${msgdir}"/send.rdy ]; then
                     "${crypto}" send "${msgid}" && \
                exec "${comm}"   send "${msgid}"
            elif [ -e "${msgdir}"/send.ok  ]; then
                if [ ! -e "${msgdir}"/ack.ok ]; then
                    exec "${comm}" send "${msgid}"
                fi
            else
                error "send.req/rdy/ok not found"
            fi
        fi

    else

        # non-blocking lock of combined operations
        if [ lockmagick != "${lockmagick}" ]; then
            exec flock -n "${msgdir}"/ "$0" ${qtype} "${msgid}" lockmagick
        fi

        "${validate}" ${qtype} "${msgid}"
        set +e

        if   [ -e "${msgdir}"/recv.rdy ]; then
            "${crypto}" recv "${msgid}" && \
            "${comm}"   recv "${msgid}"
        elif [ -e "${msgdir}"/recv.ok  ]; then
            "${comm}"   recv "${msgid}"
        elif [ -e "${msgdir}"/recv.req ]; then
            "${fetch}"  recv "${msgid}" && \
            "${crypto}" recv "${msgid}" && \
            "${comm}"   recv "${msgid}"
        fi

        if   [   -e "${msgdir}"/peer.req ]; then
            exec "${crypto}" peer "${msgid}"
        elif [ ! -e "${msgdir}"/peer.ok  ]; then
            error "peer.req/ok not found"
        fi

    fi

fi
